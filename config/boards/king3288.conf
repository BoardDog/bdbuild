# king3288.conf
_G_BOARD_DESCRIPTION="RP King3288 board"
_G_ARCH="arm"
# Repository Info ===============================================================================================================================
_G_GIT_PROTOCOL="https"
_G_GIT_REPOSITORY_DOMAIN="gitlab.com"
_G_ORGANIZATION="boarddogboy/king3288"
_G_RP_LIST=("device" "rkbin" "u-boot" "kernel" "buildroot" "tools" "debian")
declare -A _G_RP_BH_LIST=(["u-boot"]="main"
    ["kernel"]="main"
    ["buildroot"]="main"
    ["tools"]="main"
    ["device"]="main"
    ["rkbin"]="main"
    ["debian"]="main"
)
_G_CMD_LIST=("init" "uboot" "u-boot" "kernel" "recovery" "rootfs" "images")
declare -A _G_CMD_DEP_LIST=(["init"]="device"
    ["uboot"]="device rkbin u-boot"
    ["kernel"]="device rkbin kernel"
    ["recovery"]="device rkbin buildroot"
    ["rootfs"]="device rkbin debian" # must compile or download images for kernel
    ["images"]="device rkbin tools" # must compile or download images for uboot, kernel, recovery
    ["cmd"]="device rkbin tools" # must compile or download images for uboot, kernel, recovery
)
# Packages Info =================================================================================================================================
__PG_CS_TC_NM_LIST=("gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf")
declare -A __PG_CS_TC_LIST=(["gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf"]="${CODE_PATH}/prebuilts/gcc/linux-x86/arm/")
# Config Info ===================================================================================================================================
__CF_BUILD_DF_NM="BoardConfig_king3288_ubuntu.mk"
# Output File Info ==============================================================================================================================
__OP_IMG_PH="${CODE_PATH}/rockdev/"
__OP_IMG_FLS="${CODE_PATH}/rockdev/update.img"

source src/log

__build_init() {
    log_info "${_G_BOARD_DESCRIPTION} init build..."
    local buildRootPath="${CODE_PATH}/"
    [ ! -d "$buildRootPath" ] && log_err "path does not exist, please check.($buildRootPath)" && return 1
    cd "$buildRootPath" && debug "entry $buildRootPath"
    local BOARD_CONFIG="${buildRootPath}/device/rockchip/.BoardConfig.mk"
    local NEW_BOARD_CONFIG="${buildRootPath}/device/rockchip/rk3288/${__CF_BUILD_DF_NM}"
    debug "BOARD_CONFIG=$BOARD_CONFIG"
    debug "NEW_BOARD_CONFIG=$NEW_BOARD_CONFIG"
    ln -sf $NEW_BOARD_CONFIG $BOARD_CONFIG
    log_info "init ${_G_BOARD_DESCRIPTION} success"
    cd -
    return 0
}
__build_uboot() {
    log_info "${_G_BOARD_DESCRIPTION} build u-boot start..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh uboot && log_info "${_G_BOARD_DESCRIPTION} build uboot success"
    cd -
    return 0
}
__build_kernel() {
    log_info "${_G_BOARD_DESCRIPTION} build kernel start..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh kernel && log_info "${_G_BOARD_DESCRIPTION} build kernel success"
    cd -
    return 0
}
__build_recovery() {
    log_info "${_G_BOARD_DESCRIPTION} build recovery start..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh recovery && log_info "${_G_BOARD_DESCRIPTION} build recovery success"
    cd -
    return 0
}
__build_rootfs() {
    log_info "${_G_BOARD_DESCRIPTION} build rootfs start..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh ubuntu && log_info "${_G_BOARD_DESCRIPTION} build rootfs success"
    cd -
    return 0
}
__build_images() {
    log_info "${_G_BOARD_DESCRIPTION} build images start..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh firmware && \
    $CODE_PATH/device/rockchip/common/build.sh updateimg && log_info "${_G_BOARD_DESCRIPTION} build firmware success"
    cd -
    return 0
}
# TODO
__build_cmd() {
    log_info "${_G_BOARD_DESCRIPTION} build cmd start..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh $1 && log_info "${_G_BOARD_DESCRIPTION} build cmd success"
    cd -
    return 0
}