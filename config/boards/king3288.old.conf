# king3288.conf
# Base Info =====================================================================================================================================
_G_BOARD_DESCRIPTION="RP King3288 board"
_G_ARCH="arm"
# Repository Info ===============================================================================================================================
_G_GIT_PROTOCOL="https"
_G_GIT_REPOSITORY_DOMAIN="gitlab.com"
_G_ORGANIZATION="boarddogboy/king3288"
_G_RP_LIST=("device" "rkbin" "u-boot" "kernel" "buildroot" "tools" "debian" "external")
declare -A _G_RP_BH_LIST=(["u-boot"]="main"
    ["kernel"]="main"
    ["buildroot"]="main"
    ["tools"]="main"
    ["device"]="main"
    ["rkbin"]="main"
    ["debian"]="main"
    ["external"]="main"
)
_G_CMD_LIST=("init" "uboot" "kernel" "recovery" "rootfs" "image")
declare -A _G_CMD_DEP_LIST=(["init"]="device"
    ["uboot"]="device rkbin u-boot"
    ["kernel"]="device rkbin kernel"
    ["recovery"]="device rkbin buildroot external"
    ["rootfs"]="device rkbin debian" # must compile or download image for kernel
    ["image"]="device rkbin tools"  # must compile or download image for uboot, kernel, recovery
    ["cmd"]="device rkbin tools"     # must compile or download image for uboot, kernel, recovery
)
declare -A _G_CMD_DSC_LIST=(["init"]="King3288 board build init"
    ["uboot"]="King3288 board build uboot source"
    ["kernel"]="King3288 board build kernel source"
    ["recovery"]="King3288 board build recovery image"
    ["rootfs"]="King3288 board build ubuntu rootfs"
    ["image"]="King3288 board build full image"
    ["cmd"]="King3288 board build command"
)
# Packages Info =================================================================================================================================
__PG_CS_TC_NM_LIST=("gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf")
declare -A __PG_CS_TC_LIST=(["gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf"]="${CODE_PATH}/prebuilts/gcc/linux-x86/arm/")
# Config Info ===================================================================================================================================
__CF_BUILD_DF_NM="BoardConfig_king3288_ubuntu.mk"
# Output File Info ==============================================================================================================================
__OP_IMG_PH="${CODE_PATH}/rockdev/"
__OP_IMG_FLS="${CODE_PATH}/rockdev/update.img"
# Process Handle ================================================================================================================================
source src/log

__build_init() {
    log_info "board: <${_G_BOARD_DESCRIPTION}> build init..."
    local buildRootPath="${CODE_PATH}/"
    [ ! -d "$buildRootPath" ] && {
        log_err "path($buildRootPath) does not exist, please check"
        return 1
    }
    cd "$buildRootPath" && debug "entry $buildRootPath"
    local BOARD_CONFIG="${buildRootPath}/device/rockchip/.BoardConfig.mk"
    local NEW_BOARD_CONFIG="${buildRootPath}/device/rockchip/rk3288/${__CF_BUILD_DF_NM}"
    ln -sf $NEW_BOARD_CONFIG $BOARD_CONFIG && log_info "board: <${_G_BOARD_DESCRIPTION}> init success"
    rollback_dir && debug "entry $(pwd)"
    return 0
}
__build_uboot() {
    log_info "board: <${_G_BOARD_DESCRIPTION}> build u-boot..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh uboot && log_info "board: <${_G_BOARD_DESCRIPTION}> build uboot success"
    rollback_dir && debug "entry $(pwd)"
    return 0
}
__build_kernel() {
    log_info "board: <${_G_BOARD_DESCRIPTION}> build kernel..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh kernel && log_info "board: <${_G_BOARD_DESCRIPTION}> build kernel success"
    rollback_dir && debug "entry $(pwd)"
    return 0
}
__build_recovery() {
    log_info "board: <${_G_BOARD_DESCRIPTION}> build recovery..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh recovery && log_info "board: <${_G_BOARD_DESCRIPTION}> build recovery success"
    rollback_dir && debug "entry $(pwd)"
    return 0
}
__build_rootfs() {
    log_info "board: <${_G_BOARD_DESCRIPTION}> build rootfs..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh ubuntu && log_info "board: <${_G_BOARD_DESCRIPTION}> build rootfs success"
    rollback_dir && debug "entry $(pwd)"
    return 0
}
__build_image() {
    log_info "board: <${_G_BOARD_DESCRIPTION}> build image..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh firmware &&
        $CODE_PATH/device/rockchip/common/build.sh updateimg && log_info "board: <${_G_BOARD_DESCRIPTION}> build image success"
    rollback_dir && debug "entry $(pwd)"
    return 0
}
# TODO
__build_cmd() {
    log_info "board: <${_G_BOARD_DESCRIPTION}> build cmd..."
    cd "${CODE_PATH}/" && debug "entry ${CODE_PATH}/"
    $CODE_PATH/device/rockchip/common/build.sh $1 && log_info "board: <${_G_BOARD_DESCRIPTION}> build cmd success"
    rollback_dir && debug "entry $(pwd)"
    return 0
}
